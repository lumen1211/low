name: CI

on:
  pull_request:
    branches: [ main ]     # проверяем каждый PR в main
  push:
    branches: [ main ]     # и каждый пуш в main
  workflow_dispatch: {}     # возможность запустить вручную из вкладки Actions

jobs:
  tests:
    name: Pytests (Ubuntu, Py3.11)
    runs-on: ubuntu-latest

    permissions:
      contents: read        # минимально нужные права

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          # если есть requirements.txt — ставим зависимости проекта
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # если используете pyproject.toml с extras [dev] — попробуем их поставить
          if [ -f pyproject.toml ]; then pip install -e ".[dev]" || true; fi
          # ОБЯЗАТЕЛЬНО ставим pytest (раньше из-за его отсутствия всё падало)
          pip install pytest

      - name: Run unit tests
        run: |
          pytest -q --maxfail=1 --disable-warnings

  run_app:
    name: Run app (headless) + capture logs/screenshot
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ always() }}    # запустить даже если tests упали — чтобы увидеть, что происходит

    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install system packages for headless GUI
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb imagemagick \
            libgl1 libxkbcommon-x11-0 libxrender1 libxrandr2 \
            libxcb-icccm4 libxcb-keysyms1 libxcb-randr0 libxcb-image0 \
            fonts-dejavu

      - name: Install Python deps for app
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # на случай, если GUI на PySide6 или PyQt5 — ставим то, что найдётся
          pip install PySide6 || pip install PyQt5 || true

      # Если у вас не GUI, а консольное приложение — замените команду запуска ниже.
      - name: Run app under Xvfb and take screenshot
        shell: bash
        env:
          DISPLAY: ":99"
          APP_ENTRY: "src/gui.py"     # ← ПРИ НУЖДЕ ИЗМЕНИТЕ на вашу точку входа, например src/miner.py
        run: |
          set -e
          Xvfb :99 -screen 0 1920x1080x24 &
          XVFB_PID=$!
          sleep 1

          echo "[CI] launching app: ${APP_ENTRY}"
          (python "${APP_ENTRY}" > run.log 2>&1 &) || true
          APP_PID=$!

          # даём приложению шанс запуститься/что-то вывести
          sleep 8

          # делаем скрин «экрана» (если GUI действительно рисует окно)
          import -window root screenshot.png || true

          # завершаем приложение
          kill ${APP_PID} 2>/dev/null || true
          sleep 1
          kill -9 ${APP_PID} 2>/dev/null || true
          kill ${XVFB_PID} 2>/dev/null || true

      - name: Upload artifacts (logs + screenshot)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: app-run
          path: |
            run.log
            screenshot.png
